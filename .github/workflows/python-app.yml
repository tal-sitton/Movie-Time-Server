# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: run program

on:
  repository_dispatch:
    types: [ test ]
  
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  schedule:
    - cron: "23 2 * * *" # 4:23am every day israel time (1:23 UTC time)

permissions: write-all

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: ghcr.io/tal-sitton/heb-elastic:latest
        ports:
          - 9200:9200
        options: >-
          --name elasticsearch

      tor-proxy:
        image: ghcr.io/tal-sitton/torproxy-israel:latest
        ports:
          - 8118:8118
        options: >-
          --name proxy
    

    steps:
      - name: get elastic data
        run: |
          curl https://raw.githubusercontent.com/tal-sitton/seret-indexer/master/esdata.zip -o esdata.zip
          sudo apt install -y zip
          unzip esdata.zip

      - name: cp elastic data to container
        run: |
          docker cp esdata/. elasticsearch:/usr/share/elasticsearch/data
          docker exec -u root elasticsearch chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data
          docker restart elasticsearch
          timeout 75s sh -c 'until docker ps | grep elasticsearch | grep -q healthy; do echo "Waiting for container to be healthy..."; sleep 5; done'

      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: test seret
        run:
          pytest

  build:

    runs-on: ubuntu-latest

    services:
      elasticsearch:
        image: ghcr.io/tal-sitton/heb-elastic:latest
        ports:
          - 9200:9200
        options: >-
          --name elasticsearch

      tor-proxy:
        image: ghcr.io/tal-sitton/torproxy-israel
        ports:
          - 8118:8118
        options: >-
          --name proxy

    steps:
      - name: get elastic data
        run: |
          curl https://raw.githubusercontent.com/tal-sitton/seret-indexer/master/esdata.zip -o esdata.zip
          sudo apt install -y zip
          unzip esdata.zip

      - name: cp elastic data to container
        run: |
          docker cp esdata/. elasticsearch:/usr/share/elasticsearch/data
          docker exec -u root elasticsearch chown -R elasticsearch:elasticsearch /usr/share/elasticsearch/data
          docker restart elasticsearch
          timeout 75s sh -c 'until docker ps | grep elasticsearch | grep -q healthy; do echo "Waiting for container to be healthy..."; sleep 5; done'


      - uses: actions/checkout@v4
        if: github.event_name == 'pull_request'
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      - uses: actions/checkout@v4
        if: github.event_name != 'pull_request'
        with:
          fetch-depth: 0

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: run program
        run:
          python main.py
        env:
          ELASTIC_HOST: http://localhost:9200

      - name: config git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: add movies.json
        run:
          git add movies.json

      - name: add logs
        continue-on-error: true
        run:
          git add logs.txt

      - name: commit file and push
        run: |
          git commit -m "Update movies.json"
          git push
